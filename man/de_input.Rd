% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-class.R
\docType{class}
\name{de_input-class}
\alias{de_input-class}
\alias{setDEInput}
\alias{print,de_input-method}
\title{Differential Evolution (DE) MCMC Input Configuration}
\usage{
setDEInput(
  pop_migration_prob = 0,
  sub_migration_prob = 0,
  gamma_precursor = 2.38,
  rp = 0.001,
  is_hblocked = FALSE,
  is_pblocked = FALSE,
  nparameter = 5L,
  nchain = 3L,
  pop_debug = FALSE,
  sub_debug = FALSE
)

\S4method{print}{de_input}(x)
}
\arguments{
\item{pop_migration_prob}{Population-level migration probability (0-1)}

\item{sub_migration_prob}{Subject-level migration probability (0-1)}

\item{gamma_precursor}{Scaling factor for proposal generation (typically 2.38)}

\item{rp}{Random perturbation size for proposals}

\item{is_hblocked}{Use block updating for hyperparameters?}

\item{is_pblocked}{Use block updating for subject parameters?}

\item{nparameter}{Number of parameters in the model}

\item{nchain}{Number of parallel chains}

\item{pop_debug}{Logical. If \code{TRUE}, enables verbose diagnostic
output at the population level for debugging purposes (default = FALSE).}

\item{sub_debug}{Logical. If \code{TRUE}, enables verbose diagnostic
output at the subject level for debugging purposes (default = FALSE).}

\item{x}{A `de_input` object (for print method)}
}
\value{
\describe{
  \item{`setDEInput()`}{Returns a `de_input` class object}
  \item{`print` method}{Invisibly returns the input object}
}
}
\description{
Provides configuration objects and methods for Differential Evolution
Markov Chain Monte Carlo (DE-MCMC) sampling, including migration
probabilities and tuning parameters.
}
\details{
The `de_input` class encapsulates key configuration parameters for DE-MCMC sampling:
\itemize{
  \item Chain migration probabilities control between-chain mixing
  \item Gamma precursor affects proposal jump sizes
  \item Random perturbation (rp) maintains chain diversity
  \item Block updating options can improve efficiency for correlated parameters
}
}
\section{Slots}{

\describe{
\item{\code{pop_migration_prob}}{Numeric. Population-level chain migration
probability (default = 0.00)}

\item{\code{sub_migration_prob}}{Numeric. Subject-level chain migration
probability (default = 0.00)}

\item{\code{gamma_precursor}}{Numeric. Scaling factor for proposal
distribution (default = 2.38)}

\item{\code{rp}}{Numeric. Random perturbation factor for proposals (default = 0.001)}

\item{\code{is_hblocked}}{Logical. Whether hyperparameters use block
updating (default = FALSE)}

\item{\code{is_pblocked}}{Logical. Whether subject parameters use block
updating (default = FALSE)}

\item{\code{nparameter}}{Integer. Number of parameters in model (default = 5L)}

\item{\code{nchain}}{Integer. Number of MCMC chains (default = 3L)}

\item{\code{pop_debug}}{Logical. Whether to print hyper-level debugging information}

\item{\code{sub_debug}}{Logical. Whether to print subject-level debugging information}
}}

\section{Functions}{

\describe{
  \item{`setClass("de_input")`}{Defines the DE-MCMC configuration class}
  \item{`setDEInput()`}{Constructor function for creating `de_input` objects}
  \item{`print` method}{Displays a readable summary of DE-MCMC configuration}
}
}

\examples{
# Create a default configuration
de_config <- setDEInput()

# Custom configuration with higher migration and block updating
de_custom <- setDEInput(
    pop_migration_prob = 0.1,
    sub_migration_prob = 0.05,
    is_hblocked = TRUE,
    nparameter = 7L
)

# Print configuration
print(de_custom)

}
\seealso{
\code{\link{StartSampling}} for functions using these configurations,
\code{\link{setClass}} for S4 class definitions
}
