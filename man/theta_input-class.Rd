% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-class.R
\docType{class}
\name{theta_input-class}
\alias{theta_input-class}
\title{An S4 class to store MCMC sampling parameters.}
\description{
This class holds parameters that control the Markov Chain Monte Carlo (MCMC)
sampling process.
}
\details{
This class is used to encapsulate the key parameters that govern the
MCMC sampling process.  These parameters are essential for controlling
the length of the MCMC run, how often to keep samples, and the
storage and reporting of the sampling process.
}
\section{Slots}{

\describe{
\item{\code{nmc}}{A integer specifying the total number of MCMC iterations
(including burn-in).}

\item{\code{nchain}}{A integer indicating the number of MCMC chains to run.}

\item{\code{thin}}{A integer indicating the thinning interval.  This
determines how often samples are kept (e.g., a `thin` of 10 keeps every
10th sample).  Thinning can help reduce autocorrelation in the MCMC samples.}

\item{\code{nparameter}}{A integer storing the number of free parameter.}

\item{\code{pnames}}{A string vector storing the name of the free parameter.}

\item{\code{report_length}}{A integer specifying the interval at which
progress reports are printed during the MCMC run. When running parallel cores
on Windows, the print function may not work.}

\item{\code{max_init_attempts}}{A integer specifying the maximum number of
attempts to initialise an MC sampler via the \code{rprior()} random number
generation.}

\item{\code{is_print}}{A logical value specifying whether to print out the progress.
upon previous samples.}
}}

\section{Objects from the Class}{

An \code{theta_input} instance can be created using
the `setThetaInput` or the conventional `new("theta_input", ...)`
constructor, where `...` are named arguments corresponding to
the slots.
}

